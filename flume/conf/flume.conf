## Sources Definition for agent "agent"
#ACTIVE LIST
agent.sources = sftp
agent.sinks = kafka
agent.channels = ch1 

# Type of source for sftp sources
agent.sources.sftp.type = org.keedio.flume.source.ftp.source.Source
agent.sources.sftp.client.source = sftp

# Connection properties for ftp server
agent.sources.sftp.name.server = sftp
agent.sources.sftp.port = 22
agent.sources.sftp.user = sftp
agent.sources.sftp.password = sftp

# Process files in
agent.sources.sftp.working.directory = ./
# Proces files matches (java regex for sftp)
agent.sources.sftp.filter.pattern = FOOTBALL_EVENTS_\\d*\\.json

# keep file track status in folder
agent.sources.sftp.folder = /var/log/flume-ftp
# file track status name
agent.sources.sftp.file.name = sftp-status-file.ser

## root is launching flume binary.
agent.sources.sftp.knownHosts = /root/.ssh/known_hosts

## for testing porposes only, default is yes
agent.sources.sftp.strictHostKeyChecking = no

# Discover delay, each configured milisecond directory will be explored
agent.sources.sftp.run.discover.delay=5000

#process by lines.
agent.sources.sftp.flushlines = true

# Whether a recursive search should be conducted on working directory
agent.sources.sftp.search.recursive = false

# Whether files that are currently being written to should be skipped
agent.sources.sftp.search.processInUse = false
# Seconds ago used to determine whether file is still being written to
agent.sources.sftp.search.processInUseTimeout = 10

# Describe the sink
agent.sinks.kafka.type = org.apache.flume.sink.kafka.KafkaSink
agent.sinks.kafka.topic = football
agent.sinks.kafka.brokerList = kafka:9094
agent.sinks.kafka.batchSize = 20

# Use a channel which buffers events in disk
agent.channels.ch1.type = file
agent.channels.ch1.checkpointDir = /var/log/flume-ftp/checkpoint
agent.channels.ch1.dataDirs = /var/log/flume-ftp/data

# Bind the source and sink to the channel
agent.sources.sftp.channels = ch1
agent.sinks.kafka.channel = ch1