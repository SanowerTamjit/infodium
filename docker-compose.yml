version: "3.8"
services:
  #---------------------------- ZOOKEEPER ----------------------------#
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    container_name: zookeeper
    networks:
      - internal
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
  #-------------------------------------------------------------------#
  #------------------------------ KAFKA ------------------------------#
  kafka:
    image: confluentinc/cp-kafka:5.4.1
    container_name: kafka
    networks:
      - internal
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.1
    container_name: schema-registry
    networks:
      - internal
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
  #-------------------------------------------------------------------#
  #----------------------------- AWS S3 ------------------------------#
  aws-s3:
    image: localstack/localstack:latest
    container_name: s3-storage
    networks:
      - internal
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    ports:
      - 4566:4566
    volumes:
      - "./volume/s3-storage/.init:/docker-entrypoint-initaws.d"
      - "./volume/s3-storage/.localstack:/tmp/localstack"

  #-------------------------------------------------------------------#
  #------------------------- ELASSTICSEARCH --------------------------#
  elasticsearch:
    image: elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./volume/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - internal
  #-------------------------------------------------------------------#
  #------------------------------ KIBANA -----------------------------#
  kibana:
    container_name: kibana
    image: kibana:7.12.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - internal
  #-------------------------------------------------------------------#
  #------------------------------ MYSQL ------------------------------#
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - 3306:3306
    networks:
      - internal
    environment:
      - MYSQL_ROOT_PASSWORD=123456
  #-------------------------------------------------------------------#
  #------------------------- EVENT GENERATOR -------------------------#
  eventgen:
    build: ./eventgen
    image: eventgen
    container_name: eventgenerator
    networks:
      - internal
    depends_on:
      - mysql
      - kafka
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASS=123456
      - MYSQL_DATABASE=football
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
      - KAFKA_TOPIC=football
      - DATA_DIR=/eventgen/resources/data
      - INPUT_FILE=event_test.csv
      - DELAY=1
#-------------------------------------------------------------------#
#----------------------------- NETWORKS ----------------------------#
networks:
  external:
    name: external_network
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
  internal:
    name: internal_network
    driver: bridge
    ipam:
      config:
        - subnet: 10.6.0.0/16
          gateway: 10.6.0.1
#-------------------------------------------------------------------#
